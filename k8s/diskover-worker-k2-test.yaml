apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
  creationTimestamp: null
  generation: 1
  labels:
    app: diskover
    cattle.io/creator: norman
    tier: worker
  name: diskover-worker-k2-test-2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-diskover-diskover-worker-k2-test-2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: diskover
        tier: worker
        workload.user.cattle.io/workloadselector: deployment-diskover-diskover-worker-k2-test-2
    spec:
      containers:
      - args:
        - echo "hello there!" && sleep 60000
        image: kayosportsau/diskover@sha256:85b772e0183f418762f752759a5953fad449971242b75d467a5f9adc80fa638a
        env:
          - name: REDIS_HOST
            value: redis
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - timeout -k 1 2 ls /diskover/diskover.cfg > /dev/null || ( echo 'Timeout failed'
              && exit 1 )
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 5
        name: diskover-worker-k2-test-2
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /diskover/diskover.cfg
          name: diskover-config
          subPath: diskover.cfg
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /etc/timezone
          name: timezone
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/localtime
          type: ""
        name: localtime
      - hostPath:
          path: /etc/timezone
          type: ""
        name: timezone
      - configMap:
          defaultMode: 420
          items:
          - key: diskover.cfg
            path: diskover.cfg
          name: diskover-config-k2-test-2
        name: diskover-config
status: {}
